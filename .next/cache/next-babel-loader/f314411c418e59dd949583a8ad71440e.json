{"ast":null,"code":"import axios from 'axios';\nimport { delay, put, takeLatest, all, fork } from \"redux-saga/effects\";\n\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    result = yield call(addPostAPI, action.data); // 만약 서버로 로그인하는 요청을 보냈으면 그 결과를 받는 것\n\n    yield put({\n      type: 'ADD_POST_SUCCESS',\n      data: result.data\n    });\n  } catch (err) {\n    //서버 요청 실패시\n    yield put({\n      //put=dispatch 라고 생각하기, 액션 객체 dispatch\n      type: 'ADD_POST_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest('ADD_POST_REQUEST', addPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost)]);\n}","map":{"version":3,"sources":["C:/Users/전채이/react-nodebird/prepare/front/sagas/post.js"],"names":["axios","delay","put","takeLatest","all","fork","addPostAPI","data","post","addPost","action","result","call","type","err","response","watchAddPost","postSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,UAArB,EAAiCC,GAAjC,EAAsCC,IAAtC,QAAkD,oBAAlD;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAAyB;AACrB,SAAOP,KAAK,CAACQ,IAAN,CAAW,WAAX,EAAuBD,IAAvB,CAAP;AACH;;AACD,UAAUE,OAAV,CAAkBC,MAAlB,EAAyB;AACrB,MAAG;AACCC,IAAAA,MAAM,GAAG,MAAMC,IAAI,CAACN,UAAD,EAAaI,MAAM,CAACH,IAApB,CAAnB,CADD,CAEC;;AACA,UAAML,GAAG,CAAC;AACNW,MAAAA,IAAI,EAAG,kBADD;AAENN,MAAAA,IAAI,EAAGI,MAAM,CAACJ;AAFR,KAAD,CAAT;AAIH,GAPD,CAOE,OAAMO,GAAN,EAAU;AAAE;AACV,UAAMZ,GAAG,CAAC;AAAE;AACRW,MAAAA,IAAI,EAAG,kBADD;AAENN,MAAAA,IAAI,EAACO,GAAG,CAACC,QAAJ,CAAaR;AAFZ,KAAD,CAAT;AAIH;AACJ;;AAID,UAAUS,YAAV,GAAwB;AACpB,QAAMb,UAAU,CAAC,kBAAD,EAAqBM,OAArB,CAAhB;AACH;;AAED,eAAe,UAAUQ,QAAV,GAAoB;AAC/B,QAAMb,GAAG,CAAC,CACNC,IAAI,CAACW,YAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import axios from 'axios';\r\nimport { delay, put, takeLatest, all, fork } from \"redux-saga/effects\";\r\n\r\nfunction addPostAPI(data){\r\n    return axios.post('/api/post',data)\r\n}\r\nfunction* addPost(action){\r\n    try{\r\n        result = yield call(addPostAPI, action.data)\r\n        // 만약 서버로 로그인하는 요청을 보냈으면 그 결과를 받는 것\r\n        yield put({\r\n            type : 'ADD_POST_SUCCESS',\r\n            data : result.data\r\n        })\r\n    } catch(err){ //서버 요청 실패시\r\n        yield put({ //put=dispatch 라고 생각하기, 액션 객체 dispatch\r\n            type : 'ADD_POST_FAILURE',\r\n            data:err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction* watchAddPost(){\r\n    yield takeLatest('ADD_POST_REQUEST', addPost); \r\n}\r\n\r\nexport default function* postSaga(){\r\n    yield all([\r\n        fork(watchAddPost),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}