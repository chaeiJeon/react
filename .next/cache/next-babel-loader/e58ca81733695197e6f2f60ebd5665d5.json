{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\\\uC804\\uCC44\\uC774\\\\react-nodebird\\\\prepare\\\\front\\\\components\\\\PostForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Form, Input, Button } from 'antd';\nimport React, { useCallback, useRef, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPost } from '../reducers/post';\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      addPostDone = _useSelector.addPostDone;\n\n  var dispatch = useDispatch();\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      text = _useInput2[0],\n      onChangeText = _useInput2[1],\n      setText = _useInput2[2];\n\n  useEffect(function () {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]); //addPostDone 값이 업데이트 된 경우에만 해당 콜백 실행\n\n  var onSubmit = useCallback(function () {\n    dispatch(addPost(text));\n    setText('');\n    {\n      /*짹짹을 누르면 textarea 비우기 위해서*/\n    }\n  }, [text]);\n  var imageInput = useRef();\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/from-data\",\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickImageUpload,\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          \"float\": 'right'\n        },\n        htmlType: \"submit\",\n        children: \"\\uC9F9\\uC9F9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map(function (v) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'inline-block'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: v,\n            style: {\n              width: '200px'\n            },\n            alt: v\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC81C\\uAC70\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, _this)]\n        }, v, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PostForm, \"j6gJFNLdZRntd5OWHomG3WdABQ8=\", true, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["C:/Users/전채이/react-nodebird/prepare/front/components/PostForm.js"],"names":["Form","Input","Button","React","useCallback","useRef","useEffect","useDispatch","useSelector","addPost","PostForm","state","post","imagePaths","addPostDone","dispatch","useInput","text","onChangeText","setText","onSubmit","imageInput","onClickImageUpload","current","click","margin","map","v","display","width"],"mappings":"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","sourcesContent":["import {Form, Input, Button } from 'antd';\r\nimport React, {useCallback, useRef, useEffect} from'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { addPost } from '../reducers/post';\r\nconst PostForm = () => {\r\n    const {imagePaths, addPostDone} = useSelector(state=> state.post);\r\n    const dispatch = useDispatch();\r\n    const [text, onChangeText, setText]=useInput('');\r\n    \r\n    useEffect(()=>{\r\n        if(addPostDone){\r\n            setText('');\r\n        }\r\n    },[addPostDone])//addPostDone 값이 업데이트 된 경우에만 해당 콜백 실행\r\n\r\n    const onSubmit = useCallback(()=>{\r\n        dispatch(addPost(text));\r\n        setText(''); {/*짹짹을 누르면 textarea 비우기 위해서*/}\r\n    },[text]);\r\n    \r\n    const imageInput = useRef();\r\n    const onClickImageUpload = useCallback(() => {\r\n        imageInput.current.click();\r\n    },[imageInput.current]);\r\n\r\n    return (\r\n        <Form style={{margin : '10px 0 20px'}}\r\n        encType = \"multipart/from-data\" onFinish={onSubmit}>\r\n            <Input.TextArea \r\n            value={text} \r\n            onChange={onChangeText} \r\n            maxLength={140} \r\n            placeholder=\"어떤 신기한 일이 있었나요?\"/>\r\n            <div>\r\n                <input type=\"file\" multiple hidden ref={imageInput}/>\r\n                <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n                <Button type=\"primary\" style={{float :'right'}} htmlType=\"submit\">짹짹</Button>\r\n            </div>\r\n            <div>\r\n                {imagePaths.map((v)=>{\r\n                    return (\r\n                    <div key={v} style={{display : 'inline-block'}}>\r\n                        <img src={v} style={{width : '200px'}} alt={v}/>\r\n                        <div>\r\n                            <Button>제거</Button>\r\n                        </div>\r\n                    </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </Form>\r\n    )\r\n};\r\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}