{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uC804\\uCC44\\uC774\\\\react-nodebird\\\\prepare\\\\front\\\\components\\\\PostCard.js\";\nimport React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { Card, Popover, Avatar, Button } from 'antd';\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone } from '@ant-design/icons';\nimport PostImages from './PostImages';\n\nconst PostCard = ({\n  post\n}) => {\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const {\n    0: commentForOpened,\n    1: setCommentForOpened\n  } = useState(false);\n  const onToggleLike = useCallback(() => {\n    setLiked(prev => !prev);\n    {\n      /*true는 false로, false는 true로 */\n    }\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentForOpened(prev => !prev);\n  });\n  const {\n    me\n  } = useSelector(state => state.user);\n  const id = me === null || me === void 0 ? void 0 : me.id; // === me && me.id\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 42\n      }, this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }, this),\n        title: post.User.nickname,\n        description: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), commentForOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB313\\uAE00\\uBD80\\uBD84\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\n{\n  /*shape으로 더 구체적으로 적어줄 수 있다. 처음에\r\n  post : PropTypes.object.isRequired 로 간단하게 적어줄 수 있음*/\n}\nexport default PostCard;","map":{"version":3,"sources":["C:/Users/전채이/react-nodebird/prepare/front/components/PostCard.js"],"names":["React","useState","useCallback","PropTypes","useSelector","Card","Popover","Avatar","Button","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","HeartTwoTone","PostImages","PostCard","post","liked","setLiked","commentForOpened","setCommentForOpened","onToggleLike","prev","onToggleComment","me","state","user","id","marginBottom","Images","User","nickname","content","propTypes","shape","number","object","string","createAt","Comments","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import React, {useState, useCallback} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {useSelector} from 'react-redux';\r\nimport {Card, Popover, Avatar, Button} from 'antd';\r\nimport {RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone} from '@ant-design/icons';\r\nimport PostImages from './PostImages';\r\n\r\n\r\n\r\nconst PostCard = ({post}) => {\r\n    const [liked, setLiked] = useState(false);\r\n    const [commentForOpened, setCommentForOpened]=useState(false);\r\n    const onToggleLike = useCallback(()=>{\r\n        setLiked((prev)=> !prev);\r\n        {/*true는 false로, false는 true로 */}\r\n    },[])\r\n    const onToggleComment = useCallback(()=>{\r\n        setCommentForOpened((prev)=>!prev);\r\n    })\r\n    const {me}= useSelector((state)=>state.user);\r\n    const id = me?.id;\r\n    // === me && me.id\r\n    return (\r\n        <div style={{marginBottom:20}}>\r\n            \r\n            <Card\r\n                cover={post.Images[0] && <PostImages images={post.Images}/>}\r\n                actions = {[\r\n                    <RetweetOutlined key=\"retweet\"/>,\r\n                    liked \r\n                        ? <HeartTwoTone twoToneColor = \"#eb2f96\" key=\"heart\" onClick={onToggleLike}/>\r\n                        : <HeartOutlined key=\"heart\" onClick={onToggleLike}/>,\r\n                    <MessageOutlined key=\"comment\" onClick={onToggleComment}/>,\r\n                    <Popover key=\"more\" content={(\r\n                        <Button.Group>\r\n                            {id && post.User.id === id ? (\r\n                                <>\r\n                                <Button>수정</Button>\r\n                                <Button type=\"danger\">삭제</Button>\r\n                                </>\r\n                            ) : <Button>신고</Button>}\r\n\r\n                        </Button.Group>\r\n                    )}>\r\n                        <EllipsisOutlined/>\r\n                    </Popover>\r\n                ]}\r\n            >\r\n                <Card.Meta\r\n                    avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n                    title={post.User.nickname}\r\n                    description={post.content}\r\n                />\r\n                </Card>\r\n                {commentForOpened && (\r\n                    <div>\r\n                        댓글부분\r\n                    </div>\r\n                )}\r\n                {/*\r\n            <CommentForm/>\r\n            <Coments/>\r\n                */}\r\n        </div>\r\n    )\r\n}\r\nPostCard.propTypes = {\r\n    post : PropTypes.shape({\r\n        id : PropTypes.number,\r\n        User : PropTypes.object,\r\n        content : PropTypes.string,\r\n        createAt : PropTypes.object,\r\n        Comments : PropTypes.arrayOf(PropTypes.object),\r\n        Images : PropTypes.arrayOf(PropTypes.object),\r\n    }).isRequired,\r\n};\r\n{/*shape으로 더 구체적으로 적어줄 수 있다. 처음에\r\npost : PropTypes.object.isRequired 로 간단하게 적어줄 수 있음*/}\r\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}