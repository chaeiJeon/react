{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(follow),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(unfollow),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(logIn),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(logOut),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(signUp),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchFollow),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(watchUnfollow),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogIn),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogOut),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(watchSignUp),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { all, delay, put, fork, takeLatest, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS } from '../reducers/user';\n\nfunction followAPI() {\n  return axios.follow('/api/follow');\n}\n\nfunction follow(action) {\n  return _regeneratorRuntime.wrap(function follow$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context.next = 5;\n          return put({\n            type: FOLLOW_SUCCESS,\n            data: action.data\n          });\n\n        case 5:\n          _context.next = 11;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 11;\n          return put({\n            type: FOLLOW_FAILURE,\n            error: _context.t0.response.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 7]]);\n}\n\nfunction unfollowAPI() {\n  return axios.unfollow('/api/unfollow');\n}\n\nfunction unfollow(action) {\n  return _regeneratorRuntime.wrap(function unfollow$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context2.next = 5;\n          return put({\n            type: UNFOLLOW_SUCCESS,\n            data: action.data\n          });\n\n        case 5:\n          _context2.next = 11;\n          break;\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 11;\n          return put({\n            type: UNFOLLOW_FAILURE,\n            error: _context2.t0.response.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 7]]);\n}\n\nfunction logInAPI(data) {\n  return axios.post('/api/login', data);\n}\n\nfunction logIn(action) {\n  return _regeneratorRuntime.wrap(function logIn$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          console.log('saga logIn');\n          _context3.next = 4;\n          return delay(1000);\n\n        case 4:\n          _context3.next = 6;\n          return put({\n            type: LOG_IN_SUCCESS,\n            data: action.data\n          });\n\n        case 6:\n          _context3.next = 12;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 12;\n          return put({\n            //put=dispatch 라고 생각하기, 액션 객체 dispatch\n            type: LOG_IN_FAILURE,\n            error: _context3.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 8]]);\n}\n\nfunction logOutAPI() {\n  return axios.post('/api/logout');\n}\n\nfunction logOut() {\n  return _regeneratorRuntime.wrap(function logOut$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context4.next = 5;\n          return put({\n            type: LOG_OUT_SUCCESS\n          });\n\n        case 5:\n          _context4.next = 11;\n          break;\n\n        case 7:\n          _context4.prev = 7;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 11;\n          return put({\n            //put=dispatch 라고 생각하기, 액션 객체 dispatch\n            type: LOG_OUT_FAILURE,\n            error: _context4.t0.response.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 7]]);\n}\n\nfunction signUpAPI(data) {\n  return axios.post('http://localhost:3065/user', data); // 백엔드 주소 적기\n}\n\nfunction signUp(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function signUp$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(signUpAPI, action.data);\n\n        case 3:\n          result = _context5.sent;\n          console.log(result);\n          _context5.next = 7;\n          return put({\n            type: SIGN_UP_SUCCESS\n          });\n\n        case 7:\n          _context5.next = 13;\n          break;\n\n        case 9:\n          _context5.prev = 9;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 13;\n          return put({\n            type: SIGN_UP_FAILURE,\n            error: _context5.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 9]]);\n}\n\nfunction watchFollow() {\n  return _regeneratorRuntime.wrap(function watchFollow$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(FOLLOW_REQUEST, follow);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction watchUnfollow() {\n  return _regeneratorRuntime.wrap(function watchUnfollow$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeLatest(UNFOLLOW_REQUEST, unfollow);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\n\nfunction watchLogIn() {\n  return _regeneratorRuntime.wrap(function watchLogIn$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest(LOG_IN_REQUEST, logIn);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nfunction watchLogOut() {\n  return _regeneratorRuntime.wrap(function watchLogOut$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return takeLatest(LOG_OUT_REQUEST, logOut);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeLatest(SIGN_UP_REQUEST, signUp);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return all([fork(watchFollow), fork(watchUnfollow), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}","map":{"version":3,"sources":["C:/Users/전채이/react-nodebird/prepare/front/sagas/user.js"],"names":["follow","unfollow","logIn","logOut","signUp","watchFollow","watchUnfollow","watchLogIn","watchLogOut","watchSignUp","userSaga","all","delay","put","fork","takeLatest","call","axios","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","followAPI","action","type","data","error","response","unfollowAPI","logInAPI","post","console","log","logOutAPI","signUpAPI","result"],"mappings":";;oDAWUA,M;qDAiBAC,Q;qDAiBAC,K;qDAqBAC,M;qDAmBAC,M;qDAcAC,W;qDAGCC,a;qDAIDC,U;qDAWAC,W;sDAIAC,W;sDAIeC,Q;;AA7HzB,SAAQC,GAAR,EAAaC,KAAb,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,UAA/B,EAA2CC,IAA3C,QAAsD,oBAAtD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACIC,cADJ,EACoBC,cADpB,EACoCC,cADpC,EAEIC,gBAFJ,EAEsBC,gBAFtB,EAEwCC,gBAFxC,EAGIC,cAHJ,EAGoBC,cAHpB,EAGoCC,cAHpC,EAIIC,eAJJ,EAIqBC,eAJrB,EAIsCC,eAJtC,EAKIC,eALJ,EAKqBC,eALrB,EAKsCC,eALtC,QAK6D,kBAL7D;;AAMA,SAASC,SAAT,GAAoB;AAChB,SAAOhB,KAAK,CAACjB,MAAN,CAAa,aAAb,CAAP;AACH;;AACD,SAAUA,MAAV,CAAiBkC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQ,iBAAMtB,KAAK,CAAC,IAAD,CAAX;;AAFR;AAAA;AAGQ,iBAAMC,GAAG,CAAC;AACNsB,YAAAA,IAAI,EAAGhB,cADD;AAENiB,YAAAA,IAAI,EAAGF,MAAM,CAACE;AAFR,WAAD,CAAT;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAQQ,iBAAMvB,GAAG,CAAC;AACNsB,YAAAA,IAAI,EAAGf,cADD;AAENiB,YAAAA,KAAK,EAAG,YAAIC,QAAJ,CAAaF;AAFf,WAAD,CAAT;;AARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcA,SAASG,WAAT,GAAsB;AAClB,SAAOtB,KAAK,CAAChB,QAAN,CAAe,eAAf,CAAP;AACH;;AACD,SAAUA,QAAV,CAAmBiC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQ,iBAAMtB,KAAK,CAAC,IAAD,CAAX;;AAFR;AAAA;AAGQ,iBAAMC,GAAG,CAAC;AACNsB,YAAAA,IAAI,EAAGb,gBADD;AAENc,YAAAA,IAAI,EAAGF,MAAM,CAACE;AAFR,WAAD,CAAT;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAQQ,iBAAMvB,GAAG,CAAC;AACNsB,YAAAA,IAAI,EAAGZ,gBADD;AAENc,YAAAA,KAAK,EAAG,aAAIC,QAAJ,CAAaF;AAFf,WAAD,CAAT;;AARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcA,SAASI,QAAT,CAAkBJ,IAAlB,EAAuB;AACnB,SAAOnB,KAAK,CAACwB,IAAN,CAAW,YAAX,EAAyBL,IAAzB,CAAP;AACH;;AACD,SAAUlC,KAAV,CAAgBgC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQQ,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAFR;AAGQ,iBAAM/B,KAAK,CAAC,IAAD,CAAX;;AAHR;AAAA;AAMQ,iBAAMC,GAAG,CAAC;AACNsB,YAAAA,IAAI,EAAGV,cADD;AAENW,YAAAA,IAAI,EAAGF,MAAM,CAACE;AAFR,WAAD,CAAT;;AANR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAWQ,iBAAMvB,GAAG,CAAC;AAAE;AACRsB,YAAAA,IAAI,EAAGT,cADD;AAENW,YAAAA,KAAK,EAAE,aAAIC,QAAJ,CAAaF;AAFd,WAAD,CAAT;;AAXR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAkBA,SAASQ,SAAT,GAAoB;AAChB,SAAO3B,KAAK,CAACwB,IAAN,CAAW,aAAX,CAAP;AACH;;AACD,SAAUtC,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQ,iBAAMS,KAAK,CAAC,IAAD,CAAX;;AAFR;AAAA;AAKQ,iBAAMC,GAAG,CAAC;AACNsB,YAAAA,IAAI,EAAGP;AADD,WAAD,CAAT;;AALR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AASQ,iBAAMf,GAAG,CAAC;AAAE;AACRsB,YAAAA,IAAI,EAAGN,eADD;AAENQ,YAAAA,KAAK,EAAC,aAAIC,QAAJ,CAAaF;AAFb,WAAD,CAAT;;AATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBA,SAASS,SAAT,CAAmBT,IAAnB,EAAwB;AACpB,SAAOnB,KAAK,CAACwB,IAAN,CAAW,4BAAX,EAAyCL,IAAzC,CAAP,CADoB,CACkC;AACzD;;AACD,SAAUhC,MAAV,CAAiB8B,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEuB,iBAAMlB,IAAI,CAAC6B,SAAD,EAAYX,MAAM,CAACE,IAAnB,CAAV;;AAFvB;AAEcU,UAAAA,MAFd;AAGQJ,UAAAA,OAAO,CAACC,GAAR,CAAYG,MAAZ;AAHR;AAIQ,iBAAMjC,GAAG,CAAC;AACNsB,YAAAA,IAAI,EAAGH;AADD,WAAD,CAAT;;AAJR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAQQ,iBAAMnB,GAAG,CAAC;AACNsB,YAAAA,IAAI,EAAGL,eADD;AAENO,YAAAA,KAAK,EAAG,aAAIC,QAAJ,CAAaF;AAFf,WAAD,CAAT;;AARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcA,SAAU/B,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMU,UAAU,CAACG,cAAD,EAAiBlB,MAAjB,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGC,SAAUM,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACG,iBAAMS,UAAU,CAACM,gBAAD,EAAmBpB,QAAnB,CAAhB;;AADH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAID,SAAUM,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMQ,UAAU,CAACS,cAAD,EAAgBtB,KAAhB,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWA,SAAUM,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMO,UAAU,CAACY,eAAD,EAAkBxB,MAAlB,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUM,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMM,UAAU,CAACgB,eAAD,EAAkB3B,MAAlB,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAUM,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMC,GAAG,CAAC,CACNG,IAAI,CAACT,WAAD,CADE,EAENS,IAAI,CAACR,aAAD,CAFE,EAGNQ,IAAI,CAACP,UAAD,CAHE,EAINO,IAAI,CAACN,WAAD,CAJE,EAKNM,IAAI,CAACL,WAAD,CALE,CAAD,CAAT;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {all, delay, put, fork, takeLatest, call} from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n    FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, \r\n    UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, \r\n    LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, \r\n    LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE,\r\n    SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS,} from '../reducers/user';\r\nfunction followAPI(){\r\n    return axios.follow('/api/follow')\r\n}\r\nfunction* follow(action){\r\n    try{\r\n        yield delay(1000);\r\n        yield put({\r\n            type : FOLLOW_SUCCESS,\r\n            data : action.data,\r\n        })\r\n    }catch(err){\r\n        yield put({\r\n            type : FOLLOW_FAILURE,\r\n            error : err.response.data,\r\n        })\r\n    }\r\n}\r\nfunction unfollowAPI(){\r\n    return axios.unfollow('/api/unfollow')\r\n}\r\nfunction* unfollow(action){\r\n    try{\r\n        yield delay(1000);\r\n        yield put({\r\n            type : UNFOLLOW_SUCCESS,\r\n            data : action.data,\r\n        })\r\n    }catch(err){\r\n        yield put({\r\n            type : UNFOLLOW_FAILURE,\r\n            error : err.response.data,\r\n        })\r\n    }\r\n}\r\nfunction logInAPI(data){\r\n    return axios.post('/api/login', data)\r\n}\r\nfunction* logIn(action){\r\n    try{\r\n        console.log('saga logIn');\r\n        yield delay(1000); /* result = yield call(logInAPI, action.data) 아직은 서버가 없으니*/\r\n        // call의 첫번째 인자는 함수명, 그다음부터는 매개변수들\r\n        // 만약 서버로 로그인하는 요청을 보냈으면 그 결과를 받는 것\r\n        yield put({\r\n            type : LOG_IN_SUCCESS,\r\n            data : action.data,\r\n        })\r\n    } catch(err){ //서버 요청 실패시\r\n        yield put({ //put=dispatch 라고 생각하기, 액션 객체 dispatch\r\n            type : LOG_IN_FAILURE,\r\n            error :err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction logOutAPI(){\r\n    return axios.post('/api/logout')\r\n}\r\nfunction* logOut(){\r\n    try{\r\n        yield delay(1000);\r\n        //result = yield call(logOutAPI)\r\n        // 만약 서버로 로그인하는 요청을 보냈으면 그 결과를 받는 것\r\n        yield put({\r\n            type : LOG_OUT_SUCCESS,\r\n        })\r\n    } catch(err){ //서버 요청 실패시\r\n        yield put({ //put=dispatch 라고 생각하기, 액션 객체 dispatch\r\n            type : LOG_OUT_FAILURE,\r\n            error:err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction signUpAPI(data){\r\n    return axios.post('http://localhost:3065/user', data) // 백엔드 주소 적기\r\n}\r\nfunction* signUp(action){\r\n    try{\r\n        const result = yield call(signUpAPI, action.data);\r\n        console.log(result);\r\n        yield put({\r\n            type : SIGN_UP_SUCCESS,\r\n        })\r\n    }catch(err){\r\n        yield put({\r\n            type : SIGN_UP_FAILURE,\r\n            error : err.response.data,\r\n        })\r\n    }\r\n}\r\nfunction* watchFollow(){\r\n    yield takeLatest(FOLLOW_REQUEST, follow);\r\n    \r\n}function* watchUnfollow(){\r\n    yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n    \r\n}\r\nfunction* watchLogIn(){\r\n    yield takeLatest(LOG_IN_REQUEST,logIn); \r\n    /* while(true){ //while로 감싸줘야 로그인하고 로그아웃하고 또 로그인 가능, while로 안감싸주면 로그인 딱 한번만 가능\r\n        yield take('LOG_IN_REQUEST', logIn);\r\n\r\n    } */\r\n    // takeEvery는 while과 같은 역할, while이 직관적이지 않아서 사용\r\n    // takeLatest는 예를들어 실수로 글올리기 버튼을 두번 눌렀을 때 둘다 로딩중이라면 마지막으로 누른것에만 반응, takeEvery에서는 두번 올린게 됨(즉각반응)\r\n    //take는 LOG_IN이라는 액션이 실행될 때까지 기다리겠다는 뜻\r\n    //LOG_IN 액션이 실행되면 logIn 함수 실행해라\r\n}\r\nfunction* watchLogOut(){\r\n    yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n    \r\n}\r\nfunction* watchSignUp(){\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nexport default function* userSaga(){\r\n    yield all([\r\n        fork(watchFollow),\r\n        fork(watchUnfollow),\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n        fork(watchSignUp),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}