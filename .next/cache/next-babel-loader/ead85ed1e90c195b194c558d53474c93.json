{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: 'halo'\n    },\n    content: '첫번째 게시글 #해시태그 #익스프레스',\n    Images: [{\n      src: \"https://search.pstatic.net/common/?src=http%3A%2F%2Fblogfiles.naver.net%2FMjAyMTAxMDJfMTQ3%2FMDAxNjA5NTI1NTQyMTM4.7KZAtCG05g_xAqB-O5Aly51dg3t-yeD3XDkOV56W5E4g.kFQxL-ab0KWEAolEYkeBlv4os-cwTfVpKGTonhR5XGIg.JPEG.1993suji%2FA1B6FB71-11E4-4C9A-B743-E7543DE2F83A.jpg&type=a340\"\n    }, {\n      src: \"https://search.pstatic.net/common/?src=http%3A%2F%2Fcafefiles.naver.net%2FMjAyMDAyMDhfMjAz%2FMDAxNTgxMTY0MDUyNTEx.2IU1wTla8ax8l3tR6J-VW3D_42FH4PLvNci97mrtFl8g.zckwx6NxjVA4w9EcSbcD4cvv7dyJk9dO2H9tak6Udjog.JPEG%2FexternalFile.jpg&type=a340\"\n    }, {\n      src: \"https://search.pstatic.net/common/?src=http%3A%2F%2Fcafefiles.naver.net%2FMjAyMDAyMDhfMjAz%2FMDAxNTgxMTY0MDUyNTEx.2IU1wTla8ax8l3tR6J-VW3D_42FH4PLvNci97mrtFl8g.zckwx6NxjVA4w9EcSbcD4cvv7dyJk9dO2H9tak6Udjog.JPEG%2FexternalFile.jpg&type=a340\"\n    }],\n    Comments: [{\n      User: {\n        nickname: 'nek'\n      },\n      content: '개정판'\n    }, {\n      User: {\n        nickname: 'hh'\n      },\n      content: '언제 나와용'\n    }]\n  }],\n  imagePaths: [],\n  postAdded: false,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE'; // ACTION이름을 상수로 빼준 이유 : 중간에 오타를 막기 위해(변수로 지정하면 오타나면 오류가 난다)\n\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: 2,\n    content: data,\n    User: {\n      id: 1,\n      nickname: 'codl'\n    },\n    Images: [],\n    Comments: []\n  };\n};\n\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: true,\n        addPostDone: false,\n        addPostError: null\n      });\n\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost(action.data)].concat(_toConsumableArray(state), [mainPosts]),\n        addPostLoading: false,\n        addPostDone: true\n      });\n\n    case ADD_POST_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: false,\n        addPostError: action.error\n      });\n\n    case ADD_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: true,\n        addPostDone: false,\n        addPostError: null\n      });\n\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost].concat(_toConsumableArray(state), [mainPosts]),\n        addPostLoading: false,\n        addPostDone: true\n      });\n\n    case ADD_POST_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: false,\n        addPostError: action.error\n      });\n\n    case ADD_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: true,\n        addPostDone: false,\n        addPostError: null\n      });\n\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost].concat(_toConsumableArray(state), [mainPosts]),\n        addPostLoading: false,\n        addPostDone: true\n      });\n\n    case ADD_POST_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: false,\n        addPostError: action.error\n      });\n\n    case ADD_COMMENT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: true,\n        addCommentDone: false,\n        addCommentError: null\n      });\n\n    case ADD_COMMENT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainComments: [dummyComment].concat(_toConsumableArray(state), [mainComments]),\n        addCommentLoading: false,\n        addCommentDone: true\n      });\n\n    case ADD_COMMENT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: false,\n        addCommentError: action.error\n      });\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["C:/Users/전채이/react-nodebird/prepare/front/reducers/post.js"],"names":["initialState","mainPosts","id","User","nickname","content","Images","src","Comments","imagePaths","postAdded","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyPost","state","action","error","mainComments","dummyComment"],"mappings":"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","sourcesContent":["\r\nexport const initialState = {\r\n    mainPosts : [{\r\n        id : 1,\r\n        User : {\r\n            id:1,\r\n            nickname :'halo',\r\n        },\r\n        content : '첫번째 게시글 #해시태그 #익스프레스',\r\n        Images : [{\r\n            src: \"https://search.pstatic.net/common/?src=http%3A%2F%2Fblogfiles.naver.net%2FMjAyMTAxMDJfMTQ3%2FMDAxNjA5NTI1NTQyMTM4.7KZAtCG05g_xAqB-O5Aly51dg3t-yeD3XDkOV56W5E4g.kFQxL-ab0KWEAolEYkeBlv4os-cwTfVpKGTonhR5XGIg.JPEG.1993suji%2FA1B6FB71-11E4-4C9A-B743-E7543DE2F83A.jpg&type=a340\",\r\n        },{\r\n            src : \"https://search.pstatic.net/common/?src=http%3A%2F%2Fcafefiles.naver.net%2FMjAyMDAyMDhfMjAz%2FMDAxNTgxMTY0MDUyNTEx.2IU1wTla8ax8l3tR6J-VW3D_42FH4PLvNci97mrtFl8g.zckwx6NxjVA4w9EcSbcD4cvv7dyJk9dO2H9tak6Udjog.JPEG%2FexternalFile.jpg&type=a340\",\r\n        },{\r\n            src : \"https://search.pstatic.net/common/?src=http%3A%2F%2Fcafefiles.naver.net%2FMjAyMDAyMDhfMjAz%2FMDAxNTgxMTY0MDUyNTEx.2IU1wTla8ax8l3tR6J-VW3D_42FH4PLvNci97mrtFl8g.zckwx6NxjVA4w9EcSbcD4cvv7dyJk9dO2H9tak6Udjog.JPEG%2FexternalFile.jpg&type=a340\",\r\n        }],\r\n        Comments : [\r\n            {  \r\n            User : {\r\n                nickname : 'nek'\r\n            },\r\n            content : '개정판',\r\n            },\r\n            {\r\n            User : {\r\n                nickname : 'hh',\r\n            },\r\n            content : '언제 나와용',\r\n            },\r\n        ]\r\n    }],\r\n    imagePaths : [],\r\n    postAdded: false,\r\n    addPostLoading : false,\r\n    addPostDone : false,\r\n    addPostError : null,\r\n    addCommentLoading : false,\r\n    addCommentDone : false,\r\n    addCommentError : null,\r\n}\r\n\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\n// ACTION이름을 상수로 빼준 이유 : 중간에 오타를 막기 위해(변수로 지정하면 오타나면 오류가 난다)\r\nexport const addPost= (data) => ({\r\n    type : ADD_POST_REQUEST,\r\n    data,\r\n});\r\nexport const addComment= (data) => ({\r\n    type : ADD_COMMENT_REQUEST,\r\n    data,\r\n});\r\nconst dummyPost = (data) => ({\r\n    id:2,\r\n    content : data,\r\n    User : {\r\n        id:1,\r\n        nickname : 'codl',\r\n    },\r\n    Images : [],\r\n    Comments : [],\r\n\r\n});\r\n\r\nexport default (state=initialState, action)=>{\r\n    switch(action.type){\r\n        case ADD_POST_REQUEST:\r\n            return {\r\n                ...state,\r\n                addPostLoading : true,\r\n                addPostDone : false,\r\n                addPostError : null,\r\n            };\r\n        case ADD_POST_SUCCESS:\r\n            return{\r\n                ...state,\r\n                mainPosts : [dummyPost(action.data), ...state,mainPosts],\r\n                addPostLoading : false,\r\n                addPostDone : true,\r\n            };\r\n        case ADD_POST_FAILURE:\r\n            return{\r\n                ...state,\r\n                addPostLoading : false,\r\n                addPostError : action.error,\r\n            };\r\n        case ADD_POST_REQUEST:\r\n            return {\r\n                ...state,\r\n                addPostLoading : true,\r\n                addPostDone : false,\r\n                addPostError : null,\r\n            };\r\n        case ADD_POST_SUCCESS:\r\n            return{\r\n                ...state,\r\n                mainPosts : [dummyPost, ...state,mainPosts],\r\n                addPostLoading : false,\r\n                addPostDone : true,\r\n            };\r\n        case ADD_POST_FAILURE:\r\n            return{\r\n                ...state,\r\n                addPostLoading : false,\r\n                addPostError : action.error,\r\n            };\r\n        case ADD_POST_REQUEST:\r\n            return {\r\n                ...state,\r\n                addPostLoading : true,\r\n                addPostDone : false,\r\n                addPostError : null,\r\n            };\r\n        case ADD_POST_SUCCESS:\r\n            return{\r\n                ...state,\r\n                mainPosts : [dummyPost, ...state,mainPosts],\r\n                addPostLoading : false,\r\n                addPostDone : true,\r\n            };\r\n        case ADD_POST_FAILURE:\r\n            return{\r\n                ...state,\r\n                addPostLoading : false,\r\n                addPostError : action.error,\r\n            };\r\n        case ADD_COMMENT_REQUEST:\r\n            return {\r\n                ...state,\r\n                addCommentLoading : true,\r\n                addCommentDone : false,\r\n                addCommentError : null,\r\n            };\r\n        case ADD_COMMENT_SUCCESS:\r\n            return{\r\n                ...state,\r\n                mainComments : [dummyComment, ...state,mainComments],\r\n                addCommentLoading : false,\r\n                addCommentDone : true,\r\n            };\r\n        case ADD_COMMENT_FAILURE:\r\n            return{\r\n                ...state,\r\n                addCommentLoading : false,\r\n                addCommentError : action.error,\r\n            }\r\n        default : {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}