{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uC804\\uCC44\\uC774\\\\react-nodebird\\\\prepare\\\\front\\\\components\\\\PostForm.js\";\nimport { Form, Input, Button } from 'antd';\nimport React, { useCallback, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPost } from '../reducers/post';\n\nconst PostForm = () => {\n  const {\n    imagePaths\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  const imageInput = useRef();\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n  const onChangeText = useCallback(e => {\n    setText(e.target.value);\n  }, []);\n  const onSubmit = useCallback(() => {\n    dispatch(addPost);\n    setText('');\n    {\n      /*짹짹을 누르면 textarea 비우기 위해서*/\n    }\n  }, []);\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/from-data\",\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickImageUpload,\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          float: 'right'\n        },\n        htmlType: \"submit\",\n        children: \"\\uC9F9\\uC9F9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map(v => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'inline-block'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: v,\n            style: {\n              width: '200px'\n            },\n            alt: v\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC81C\\uAC70\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)]\n        }, v, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\nexport default PostForm;","map":{"version":3,"sources":["C:/Users/전채이/react-nodebird/prepare/front/components/PostForm.js"],"names":["Form","Input","Button","React","useCallback","useState","useRef","useDispatch","useSelector","addPost","PostForm","imagePaths","state","post","dispatch","imageInput","text","setText","onChangeText","e","target","value","onSubmit","onClickImageUpload","current","click","margin","float","map","v","display","width"],"mappings":"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","sourcesContent":["import {Form, Input, Button } from 'antd';\r\nimport React, {useCallback, useState, useRef} from'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { addPost } from '../reducers/post';\r\nconst PostForm = () => {\r\n    const {imagePaths} = useSelector(state=> state.post);\r\n    const dispatch = useDispatch();\r\n    const imageInput = useRef();\r\n    const [text, setText]=useState('');\r\n    \r\n    const onChangeText = useCallback((e)=>{\r\n        setText(e.target.value);\r\n    },[]);\r\n    const onSubmit = useCallback(()=>{\r\n        dispatch(addPost);\r\n        setText(''); {/*짹짹을 누르면 textarea 비우기 위해서*/}\r\n    },[]);\r\n    const onClickImageUpload = useCallback(() => {\r\n        imageInput.current.click();\r\n    },[imageInput.current]);\r\n\r\n    return (\r\n        <Form style={{margin : '10px 0 20px'}}\r\n        encType = \"multipart/from-data\" onFinish={onSubmit}>\r\n            <Input.TextArea \r\n            value={text} \r\n            onChange={onChangeText} \r\n            maxLength={140} \r\n            placeholder=\"어떤 신기한 일이 있었나요?\"/>\r\n            <div>\r\n                <input type=\"file\" multiple hidden ref={imageInput}/>\r\n                <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n                <Button type=\"primary\" style={{float :'right'}} htmlType=\"submit\">짹짹</Button>\r\n            </div>\r\n            <div>\r\n                {imagePaths.map((v)=>{\r\n                    return (\r\n                    <div key={v} style={{display : 'inline-block'}}>\r\n                        <img src={v} style={{width : '200px'}} alt={v}/>\r\n                        <div>\r\n                            <Button>제거</Button>\r\n                        </div>\r\n                    </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </Form>\r\n    )\r\n};\r\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}