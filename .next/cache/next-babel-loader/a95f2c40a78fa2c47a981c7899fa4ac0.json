{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\\\uC804\\uCC44\\uC774\\\\react-nodebird\\\\prepare\\\\front\\\\components\\\\CommentForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Form, Input, Button } from 'antd';\nimport React, { useCallback } from 'react';\nimport useInput from '../hooks/useInput';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  }); // state.user.me && state.user.me.id\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      commentText = _useInput2[0],\n      onChangeCommentText = _useInput2[1];\n\n  var onSubmitComment = useCallback(function () {}, [commentText]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: commentText,\n        onChange: onChangeCommentText,\n        rows: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"\\uC090\\uC57D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(CommentForm, \"PptqMkMnW7reCXQEE7qotaIWwp0=\", false, function () {\n  return [useSelector, useInput];\n});\n\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["C:/Users/전채이/react-nodebird/prepare/front/components/CommentForm.js"],"names":["Form","Input","Button","React","useCallback","useInput","PropTypes","useSelector","CommentForm","post","id","state","user","me","commentText","onChangeCommentText","onSubmitComment","propTypes","object","isRequired"],"mappings":";;;;;;;AAAA,SAAQA,IAAR,EAAcC,KAAd,EAAqBC,MAArB,QAAkC,MAAlC;AACA,OAAOC,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,WAAR,QAA0B,aAA1B;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAY;AAAA;;AAAA,MAAVC,IAAU,QAAVA,IAAU;AAC5B,MAAMC,EAAE,GAAGH,WAAW,CAAC,UAACI,KAAD;AAAA;;AAAA,6BAASA,KAAK,CAACC,IAAN,CAAWC,EAApB,mDAAS,eAAeH,EAAxB;AAAA,GAAD,CAAtB,CAD4B,CAE5B;;AAF4B,kBAIaL,QAAQ,CAAC,EAAD,CAJrB;AAAA;AAAA,MAIrBS,WAJqB;AAAA,MAIRC,mBAJQ;;AAK5B,MAAMC,eAAe,GAAGZ,WAAW,CAAC,YAAI,CAEvC,CAFkC,EAEjC,CAACU,WAAD,CAFiC,CAAnC;AAGA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEE,eAAhB;AAAA,2BACI,QAAC,IAAD,CAAM,IAAN;AAAA,8BACI,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,KAAK,EAAEF,WAAvB;AAAoC,QAAA,QAAQ,EAAEC,mBAA9C;AAAmE,QAAA,IAAI,EAAE;AAAzE;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAUH,CAlBD;;GAAMP,W;UACSD,W,EAG8BF,Q;;;KAJvCG,W;AAmBNA,WAAW,CAACS,SAAZ,GAAsB;AAClBR,EAAAA,IAAI,EAACH,SAAS,CAACY,MAAV,CAAiBC;AADJ,CAAtB;AAGA,eAAeX,WAAf","sourcesContent":["import {Form, Input, Button} from 'antd';\r\nimport React, { useCallback } from 'react';\r\nimport useInput from '../hooks/useInput';\r\nimport PropTypes from 'prop-types';\r\nimport {useSelector} from 'react-redux';\r\nconst CommentForm = ({post}) => {\r\n    const id = useSelector((state)=>state.user.me?.id);\r\n    // state.user.me && state.user.me.id\r\n\r\n    const [commentText, onChangeCommentText]=useInput('');\r\n    const onSubmitComment = useCallback(()=>{\r\n\r\n    },[commentText]);\r\n    return(\r\n        <Form onFinish={onSubmitComment}>\r\n            <Form.Item>\r\n                <Input.TextArea value={commentText} onChange={onChangeCommentText} rows={4}/>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    삐약\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\nCommentForm.propTypes={\r\n    post:PropTypes.object.isRequired,\r\n}\r\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}